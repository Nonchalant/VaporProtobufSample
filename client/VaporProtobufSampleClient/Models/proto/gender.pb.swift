// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: proto/gender.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
    struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
    typealias Version = _2
}

enum Gender: SwiftProtobuf.Enum {
    typealias RawValue = Int
    case other // = 0
    case male // = 1
    case female // = 2
    case UNRECOGNIZED(Int)

    init() {
        self = .other
    }

    init?(rawValue: Int) {
        switch rawValue {
        case 0: self = .other
        case 1: self = .male
        case 2: self = .female
        default: self = .UNRECOGNIZED(rawValue)
        }
    }

    var rawValue: Int {
        switch self {
        case .other: return 0
        case .male: return 1
        case .female: return 2
        case let .UNRECOGNIZED(i): return i
        }
    }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Gender: SwiftProtobuf._ProtoNameProviding {
    static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
        0: .same(proto: "OTHER"),
        1: .same(proto: "MALE"),
        2: .same(proto: "FEMALE"),
    ]
}
